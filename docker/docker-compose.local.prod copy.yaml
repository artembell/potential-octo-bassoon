services:
  # db:
  #   image: postgres:16.3
  #   container_name: postgre_container
  #   restart: always
  #   # ports:
  #   #   - "5432:5432"
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: root
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #     POSTGRES_DB: stripe-shit
  #   # networks:
  #   #   - backend-net
  #   # env_file:
  #   #   - ./.env.postgre.prod
  #   volumes:
  #     - postgres_vol:/var/lib/postgresql/data
  #     # - ./data/postgre:/var/lib/postgresql/data
  #     # - ./postgre/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
  #     # - ./postgre/config.conf:/etc/postgresql.conf
  #   network_mode: "host"
  #   # extra_hosts:
  #   #   - "host.docker.internal:172.17.0.1"
    
    

  db:
    image: strip-mega-image
    container_name: postgre_container
    restart: always
    ports:
      - "5432:5432"
      - "3000:3000"
    environment:
      # POSTGRES_USER: root
      # POSTGRES_PASSWORD: root
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: stripe-shit
    networks:
      - backend-net
    # env_file:
    #   - ./.env.postgre.prod
    build:
      context: ../
      dockerfile: ./docker/db.prod.Dockerfile
    volumes:
      - postgres_vol:/var/lib/postgresql/data
      # - ./data/postgre:/var/lib/postgresql/data
      # - ./postgre/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
      # - ./postgre/config.conf:/etc/postgresql.conf
    # network_mode: "host"
    # extra_hosts:
    #   - "host.docker.internal:172.17.0.1"  
    
  pgadmin:
    image: dpage/pgadmin4:8.9
    container_name: postgre_gui_container
    restart: always
    ports:
      - "7002:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@stripe.tech
      PGADMIN_DEFAULT_PASSWORD: root
    # env_file:
    #   - ./.env.postgre.prod
    volumes:
      - ./backend/data/pgadmin:/var/lib/pgadmin
      - pgadmin_vol:/var/lib/pgadmin
    networks:
      - backend-net
  
  
  stripe-caddy:
    container_name: caddy_container
    image: caddy:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    # network_mode: "host"
    volumes:
      - ./caddy/prod.Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/static:/code/static
      - ./caddy/logs:/code/logs
      - ./caddy/data:/data/caddy
      # - caddy_config:/config

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    # hostname: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
     - ./rabbitmq/data/:/var/lib/rabbitmq/mnesia/
    #  - ./myrabbit.conf:/etc/rabbitmq/rabbitmq.config
    restart: always
    networks:
      - backend-net
       
  stripe-api:
    image: stripe-integration-api
    container_name: stripe-backend-container
    ports:
      - "3000:3000"
    build:
      context: ../
      dockerfile: ./docker/build.backend.prod.Dockerfile
    networks:
      - backend-net

  stripe-frontend:
    image: stripe-integration-frontend
    container_name: stripe-frontend-container
    ports:
      - "4000:4000"
    build:
      context: ../
      dockerfile: ./docker/build.frontend.prod.Dockerfile    
     

networks:
  backend-net:
      
volumes:
  pgadmin_vol:
  postgres_vol:
  caddy_config: